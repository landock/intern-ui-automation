= Custom Command Methods

== BaseCommand

setAllTimeoutLengths(timeoutLength)::
====
This sets various timeouts. It is equivalent to: 

[source,javascript]
    .setTimeout('script', defaultTimeoutLength)
    .setTimeout('page load', defaultTimeoutLength)
    .setFindTimeout(findTimeoutLength);

NOTE: This method is an internal helper method for configureNewSession

[horizontal]
.Parameters
timeoutLength:: The amount of time the various timeouts should be set to (ms)
====



configureNewSession(timeout)::
====
This is used in tests to consolidate common setup parameters. It is equivalent to: 

[source,javascript]
    .setAllTimeoutLengths(timeout)
    .clearCookies();

Use it in the setup function of tests. For example:

[source,javascript]
    ... 
    return {
        name: 'non-logged in customer can add a coupon code',
        setup: function() {
            command = new Command(this.remote);
            couponCode = generator.getPromoCode('Anybody',0);
            return command
            .configureNewSession(60000)
            .get(config.URL + '/lens/biofinity');
        },
        ...
    }
    ...

[horizontal]
.Parameters
timeout:: The amount of time the various timeouts should be set to (ms)
====



configureNewMobileSession(timeout)::
====
This is used in tests to consolidate common setup parameters for mobile tests. It is equivalent to: 

[source,javascript]
    .configureNewSession(timeout)
    .mobileClearAppAdPage()
    .removeDemandWareWidget();


Use it in the setup function of mobile tests. For example:

[source,javascript]
    return {
        name: 'mobile address editing test',
        setup : function() {
            customer = generator.getRandomCustomer();
            anotherRandomCustomer = generator.getRandomCustomer();
            command = new Command(this.remote);
            return command
            .configureNewMobileSession(60000)
            .get(config.URL + '/account');
        },
        ...
    }
    ...


[horizontal]
.Parameters
timeout:: The amount of time the various timeouts should be set to (ms)
====



loginFromHeader(customer)::
====
Consolidates commands to log a customer in using the drop-down menu in the header of the 1800Contacts website.

[horizontal]
.Parameters
customer:: A customer object representing the custoer to be logged in (typically from `generator.js`) 
====



logoutFromHeader()::
====
Consolidates commands to log a customer out using the drop-down menu in the header.

CAUTION: This method will fail if called when no customer is logged in
====



mobileLogin(customer)::
====
Consolidates commands to log a customer in on mobile platforms.

[horizontal]
.Parameters
customer:: A customer object representing the custoer to be logged in (typically from `generator.js`) 
====



mobileLogout()::
====
Consolidates commands to log a customer out on mobile platforms.

CAUTION: This method will fail if called when no customer is logged in
====



signInFromCart(customer)::
====
Consolidates commands to sign a customer in when prompted during the checkout process.

NOTE: This method has to be called when the test is on the page prompting for login during the checkout process or else it will fail.

[horizontal]
.Parameters
customer:: A customer object representing the custoer to be logged in (typically from `generator.js`) 
====



assertLoggedIn()::
====
Asserts that a user is logged in. Fails if they are not logged in.
====



assertLoggedOut()::
====
Asserts that a user is not logged in (logged out). Fails if they are still logged in.
====



enterInput(id, text)::
====
Enters text into a form text input. This method encapsulates extra functionality that leadfoot's `.type()` doesn't have which handles the clearing of default placeholder text on the 1800Contacts site. 

CAUTION: This only works for pages that have JQuery loaded

[horizontal]
.Parameters
id:: The CSS selector of the form input element to receieve the text 
text:: The text to enter into the form input element specified by `id` 
====



enterInputWithoutJQuery(id, text)::
====
Enters text into a form text input. This is intended for use with external pages (i.e. PayPal, FaceBook sign-ins) which do not use JQuery. For 1800Contacts page inputs, use `enterInput` instead.

[horizontal]
.Parameters
id:: The CSS selector of the form input element to receieve the text 
text:: The text to enter into the form input element specified by `id` 
====


////
Finish this tomorrow
setDesktopPowerDropdown(id, value)::
====
Sets the eye power on contacts product pages. Use this instead of `setDropdown` for the eye power dropdown since it contains additional logic to handle the custom dual-column dropdown for eye power used on the 1800Contacts site.

[horizontal]
.Parameters
id:: The id of the  
text:: The text to enter into the form input element specified by `id` 
====
////
